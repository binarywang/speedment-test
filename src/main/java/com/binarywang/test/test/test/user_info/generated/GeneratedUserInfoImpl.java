package com.binarywang.test.test.test.user_info.generated;

import com.binarywang.test.test.test.user_info.UserInfo;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;

import java.util.Objects;
import java.util.OptionalInt;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.binarywang.test.test.test.user_info.UserInfo}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedUserInfoImpl implements UserInfo {
    
    private long id;
    private String name;
    private Integer age;
    
    protected GeneratedUserInfoImpl() {}
    
    @Override
    public long getId() {
        return id;
    }
    
    @Override
    public String getName() {
        return name;
    }
    
    @Override
    public OptionalInt getAge() {
        return OptionalUtil.ofNullable(age);
    }
    
    @Override
    public UserInfo setId(long id) {
        this.id = id;
        return this;
    }
    
    @Override
    public UserInfo setName(String name) {
        this.name = name;
        return this;
    }
    
    @Override
    public UserInfo setAge(Integer age) {
        this.age = age;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "   + Objects.toString(getId()));
        sj.add("name = " + Objects.toString(getName()));
        sj.add("age = "  + Objects.toString(OptionalUtil.unwrap(getAge())));
        return "UserInfoImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof UserInfo)) { return false; }
        final UserInfo thatUserInfo = (UserInfo)that;
        if (this.getId() != thatUserInfo.getId()) { return false; }
        if (!Objects.equals(this.getName(), thatUserInfo.getName())) { return false; }
        if (!Objects.equals(this.getAge(), thatUserInfo.getAge())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Long.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getName());
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getAge()));
        return hash;
    }
}