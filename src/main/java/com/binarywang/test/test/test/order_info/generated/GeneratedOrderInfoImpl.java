package com.binarywang.test.test.test.order_info.generated;

import com.binarywang.test.test.test.order_info.OrderInfo;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;

import java.util.Objects;
import java.util.Optional;
import java.util.OptionalLong;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.binarywang.test.test.test.order_info.OrderInfo}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedOrderInfoImpl implements OrderInfo {
    
    private long id;
    private Long userId;
    private String productName;
    private String productor;
    
    protected GeneratedOrderInfoImpl() {}
    
    @Override
    public long getId() {
        return id;
    }
    
    @Override
    public OptionalLong getUserId() {
        return OptionalUtil.ofNullable(userId);
    }
    
    @Override
    public String getProductName() {
        return productName;
    }
    
    @Override
    public Optional<String> getProductor() {
        return Optional.ofNullable(productor);
    }
    
    @Override
    public OrderInfo setId(long id) {
        this.id = id;
        return this;
    }
    
    @Override
    public OrderInfo setUserId(Long userId) {
        this.userId = userId;
        return this;
    }
    
    @Override
    public OrderInfo setProductName(String productName) {
        this.productName = productName;
        return this;
    }
    
    @Override
    public OrderInfo setProductor(String productor) {
        this.productor = productor;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "          + Objects.toString(getId()));
        sj.add("userId = "      + Objects.toString(OptionalUtil.unwrap(getUserId())));
        sj.add("productName = " + Objects.toString(getProductName()));
        sj.add("productor = "   + Objects.toString(OptionalUtil.unwrap(getProductor())));
        return "OrderInfoImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof OrderInfo)) { return false; }
        final OrderInfo thatOrderInfo = (OrderInfo)that;
        if (this.getId() != thatOrderInfo.getId()) { return false; }
        if (!Objects.equals(this.getUserId(), thatOrderInfo.getUserId())) { return false; }
        if (!Objects.equals(this.getProductName(), thatOrderInfo.getProductName())) { return false; }
        if (!Objects.equals(this.getProductor(), thatOrderInfo.getProductor())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Long.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getUserId()));
        hash = 31 * hash + Objects.hashCode(getProductName());
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getProductor()));
        return hash;
    }
}