package com.binarywang.test.test.test.order_info.generated;

import com.binarywang.test.test.test.order_info.OrderInfo;
import com.binarywang.test.test.test.order_info.OrderInfoImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

import static com.speedment.common.injector.State.RESOLVED;
import static com.speedment.runtime.core.internal.util.sql.ResultSetUtil.*;

/**
 * The generated Sql Adapter for a {@link
 * com.binarywang.test.test.test.order_info.OrderInfo} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedOrderInfoSqlAdapter implements SqlAdapter<OrderInfo> {
    
    private final TableIdentifier<OrderInfo> tableIdentifier;
    
    protected GeneratedOrderInfoSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("test", "test", "order_info");
    }
    
    protected OrderInfo apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
            .setId(          resultSet.getLong(1 + offset))
            .setUserId(      getLong(resultSet, 2 + offset))
            .setProductName( resultSet.getString(3 + offset))
            .setProductor(   resultSet.getString(4 + offset))
            ;
    }
    
    protected OrderInfoImpl createEntity() {
        return new OrderInfoImpl();
    }
    
    @Override
    public TableIdentifier<OrderInfo> identifier() {
        return tableIdentifier;
    }
    
    @Override
    public SqlFunction<ResultSet, OrderInfo> entityMapper() {
        return entityMapper(0);
    }
    
    @Override
    public SqlFunction<ResultSet, OrderInfo> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}